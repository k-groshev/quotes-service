/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'idea'
    // release plugin
    id 'net.researchgate.release' version '3.1.0'
}

group = 'net.groshev'
sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "com.github.javafaker:javafaker:1.0.2"

    // + lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:33.4.8-jre'

    implementation('com.fasterxml.jackson.core:jackson-databind')
    implementation('org.apache.commons:commons-lang3')


    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.2'
    // + spring reactive testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// release plugin configuration https://github.com/researchgate/gradle-release
// for release use 'gradle release'
release {
    git {
        requireBranch.set('main')
    }
}

springBoot {
    buildInfo()
}

ext {
    set('springCloudVersion', "2021.0.5")
    set('equalsVerifierVersion', '3.3')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.module.toString() == 'org.yaml:snakeyaml') {
            details.artifactSelection {
                it.selectArtifact(DependencyArtifact.DEFAULT_TYPE, null, null)
            }
        }
    }
}
